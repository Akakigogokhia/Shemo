{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKAKI\\\\SocialMedia\\\\client\\\\src\\\\pages\\\\chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Header from '../../components/header/Header';\nimport Conversation from '../../components/conversations/Conversation';\nimport './chat.css';\nimport Message from '../../components/message/Message';\nimport ChatOnline from '../../components/chatOnline/ChatOnline';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport useFetch from '../../hooks/useFetch';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [currentChat, setCurrentChat] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    data: conversations\n  } = useFetch('/conversations/' + user._id);\n  const {\n    data: message\n  } = useFetch('/messages/' + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n  const scroll = useRef();\n  useEffect(() => {\n    setMessages(message);\n  }, [message]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    try {\n      const res = await axios.post('/messages', message);\n      setMessages([...messages, res.data]);\n      setNewMessage('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrentChat(conv),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: conv,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, conv._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n                message: message,\n                own: message.sender === user._id\n              }, message._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"Write a message...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), ' ']\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"H1noZW1Q/lkICytvRkU6utw7a/s=\", false, function () {\n  return [useFetch, useFetch];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useState","Header","Conversation","Message","ChatOnline","AuthContext","useEffect","axios","useFetch","useRef","Chat","currentChat","setCurrentChat","newMessage","setNewMessage","messages","setMessages","user","data","conversations","_id","message","scroll","handleSubmit","e","preventDefault","sender","text","conversationId","res","post","error","console","log","map","conv","target","value"],"sources":["C:/Users/AKAKI/SocialMedia/client/src/pages/chat/Chat.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport Header from '../../components/header/Header';\r\nimport Conversation from '../../components/conversations/Conversation';\r\nimport './chat.css';\r\nimport Message from '../../components/message/Message';\r\nimport ChatOnline from '../../components/chatOnline/ChatOnline';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { useRef } from 'react';\r\n\r\nexport default function Chat() {\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const { user } = useContext(AuthContext);\r\n  const { data: conversations } = useFetch('/conversations/' + user._id);\r\n  const { data: message } = useFetch('/messages/' + currentChat?._id);\r\n  const scroll = useRef();\r\n\r\n  useEffect(() => {\r\n    setMessages(message);\r\n  }, [message]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n    try {\r\n      const res = await axios.post('/messages', message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='chat'>\r\n        <div className='chatMenu'>\r\n          <div className='chatMenuWrapper'>\r\n            <input placeholder='Search for friends' className='chatMenuInput' />\r\n            {conversations.map((conv) => (\r\n              <div onClick={() => setCurrentChat(conv)} key={conv._id}>\r\n                <Conversation conversation={conv} currentUser={user} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className='chatBox'>\r\n          <div className='chatBoxWrapper'>\r\n            {currentChat ? (\r\n              <>\r\n                <div className='chatBoxTop'>\r\n                  {messages?.map((message) => (\r\n                    <Message\r\n                      message={message}\r\n                      own={message.sender === user._id}\r\n                      key={message._id}\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <div className='chatBoxBottom'>\r\n                  <textarea\r\n                    className='chatMessageInput'\r\n                    placeholder='Write a message...'\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className='chatSubmitButton' onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>{' '}\r\n              </>\r\n            ) : (\r\n              <span className='noConversationText'>\r\n                Open a conversation to start a chat\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className='chatOnline'>\r\n          <div className='chatOnlineWrapper'>\r\n            <ChatOnline />\r\n            <ChatOnline />\r\n            <ChatOnline />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}