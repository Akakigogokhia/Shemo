{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKAKI\\\\SocialMedia\\\\client\\\\src\\\\pages\\\\chat\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Header from '../../components/header/Header';\nimport Conversation from '../../components/conversations/Conversation';\nimport './chat.css';\nimport Message from '../../components/message/Message';\nimport ChatOnline from '../../components/chatOnline/ChatOnline';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport CallIcon from '@mui/icons-material/Call';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat(_ref) {\n  _s();\n  let {\n    single\n  } = _ref;\n  const [currentChat, setCurrentChat] = useState(null);\n  const [conversations, setConversations] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [friendImg, setFriendImg] = useState(null);\n  const [friend, setFriend] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  const socket = useRef();\n  const scroll = useRef();\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const configureChat = conv => {\n    setCurrentChat(conv);\n    window.location.replace('/chat/' + conv._id);\n  };\n  const checkActive = conv => {\n    const friendId = conv.members.find(member => member !== user._id);\n    return onlineUsers === null || onlineUsers === void 0 ? void 0 : onlineUsers.some(u => u.userId === friendId);\n  };\n  useEffect(() => {\n    socket.current = io('ws://localhost:4000');\n    socket.current.on('getMessage', data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const friendId = currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.find(member => member !== user._id);\n    const getUser = async () => {\n      try {\n        const res = await axios.get('/users?userId=' + friendId);\n        setFriend(res.data);\n        setFriendImg(res.data.profilePicture);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUser();\n  }, [currentChat]);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    socket.current.emit('addUser', user._id);\n    socket.current.on('getUsers', users => {\n      setOnlineUsers(users);\n    });\n  }, [user]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get('/conversations/' + user._id);\n        setConversations(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get('/messages/' + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setMessages(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentChat]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newMessage.length > 0) {\n      const message = {\n        sender: user._id,\n        text: newMessage,\n        conversationId: currentChat._id\n      };\n      const receiverId = currentChat.members.find(member => member !== user._id);\n      socket.current.emit('sendMessage', {\n        senderId: user._id,\n        receiverId,\n        text: newMessage\n      });\n      try {\n        const res = await axios.post('/messages', message);\n        setMessages([...messages, res.data]);\n        setNewMessage('');\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  useEffect(() => {\n    var _scroll$current;\n    (_scroll$current = scroll.current) === null || _scroll$current === void 0 ? void 0 : _scroll$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        style: {\n          display: single ? 'none' : 'block'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), conversations === null || conversations === void 0 ? void 0 : conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => configureChat(conv),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: conv,\n              currentUser: user,\n              active: checkActive(conv)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, conv._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        style: {\n          display: !single ? 'none' : 'block'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxHeader\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cImgContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"cHeaderImg\",\n                  src: friendImg ? PF + friendImg : PF + 'person/noAvatar.png'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"iHeader\",\n                  children: checkActive(currentChat) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"activeBadge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"hUsername\",\n                      children: friend === null || friend === void 0 ? void 0 : friend.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"active\",\n                      children: \"Active now\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"hUsername\",\n                      children: friend === null || friend === void 0 ? void 0 : friend.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"active\",\n                      children: \"Away\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hIcon\",\n                  children: [/*#__PURE__*/_jsxDEV(CallIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scroll,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  friendImg: friendImg,\n                  userImg: user.profilePicture,\n                  message: message,\n                  own: message.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this)\n              }, message._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"Write a message...\",\n                onChange: e => setNewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), ' ']\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        style: {\n          display: single ? 'none' : 'block'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineUsers: onlineUsers,\n            currentId: user._id,\n            setCurrentChat: setCurrentChat,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"gWCrgIKxfVwSZzXvJTROqM8AqDU=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useState","Header","Conversation","Message","ChatOnline","AuthContext","useEffect","axios","useRef","io","CallIcon","VideocamIcon","InfoIcon","Chat","single","currentChat","setCurrentChat","conversations","setConversations","newMessage","setNewMessage","messages","setMessages","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","friendImg","setFriendImg","friend","setFriend","user","socket","scroll","PF","process","env","REACT_APP_PUBLIC_FOLDER","configureChat","conv","window","location","replace","_id","checkActive","friendId","members","find","member","some","u","userId","current","on","data","sender","senderId","text","createdAt","Date","now","getUser","res","get","profilePicture","error","console","log","includes","prev","emit","users","getConversations","err","getMessages","handleSubmit","e","preventDefault","length","message","conversationId","receiverId","post","scrollIntoView","behavior","display","map","username","target","value"],"sources":["C:/Users/AKAKI/SocialMedia/client/src/pages/chat/Chat.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport Header from '../../components/header/Header';\r\nimport Conversation from '../../components/conversations/Conversation';\r\nimport './chat.css';\r\nimport Message from '../../components/message/Message';\r\nimport ChatOnline from '../../components/chatOnline/ChatOnline';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nexport default function Chat({ single }) {\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [friendImg, setFriendImg] = useState(null);\r\n  const [friend, setFriend] = useState(null);\r\n  const { user } = useContext(AuthContext);\r\n  const socket = useRef();\r\n  const scroll = useRef();\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const configureChat = (conv) => {\r\n    setCurrentChat(conv);\r\n\r\n    window.location.replace('/chat/' + conv._id);\r\n  };\r\n\r\n  const checkActive = (conv) => {\r\n    const friendId = conv.members.find((member) => member !== user._id);\r\n    return onlineUsers?.some((u) => u.userId === friendId);\r\n  };\r\n  useEffect(() => {\r\n    socket.current = io('ws://localhost:4000');\r\n    socket.current.on('getMessage', (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const friendId = currentChat?.members.find((member) => member !== user._id);\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get('/users?userId=' + friendId);\r\n        setFriend(res.data);\r\n        setFriendImg(res.data.profilePicture);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit('addUser', user._id);\r\n    socket.current.on('getUsers', (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get('/conversations/' + user._id);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axios.get('/messages/' + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newMessage.length > 0) {\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n\r\n      const receiverId = currentChat.members.find(\r\n        (member) => member !== user._id\r\n      );\r\n\r\n      socket.current.emit('sendMessage', {\r\n        senderId: user._id,\r\n        receiverId,\r\n        text: newMessage,\r\n      });\r\n\r\n      try {\r\n        const res = await axios.post('/messages', message);\r\n        setMessages([...messages, res.data]);\r\n        setNewMessage('');\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scroll.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='chat'>\r\n        <div\r\n          className='chatMenu'\r\n          style={{ display: single ? 'none' : 'block' }}\r\n        >\r\n          <div className='chatMenuWrapper'>\r\n            <input placeholder='Search for friends' className='chatMenuInput' />\r\n            {conversations?.map((conv) => (\r\n              <div key={conv._id} onClick={() => configureChat(conv)}>\r\n                <Conversation\r\n                  conversation={conv}\r\n                  currentUser={user}\r\n                  active={checkActive(conv)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='chatBox'\r\n          style={{ display: !single ? 'none' : 'block' }}\r\n        >\r\n          <div className='chatBoxWrapper'>\r\n            {currentChat ? (\r\n              <>\r\n                <div className='chatBoxHeader'>\r\n                  <div className='cImgContainer'>\r\n                    <img\r\n                      className='cHeaderImg'\r\n                      src={\r\n                        friendImg ? PF + friendImg : PF + 'person/noAvatar.png'\r\n                      }\r\n                    />\r\n                    <div className='iHeader'>\r\n                      {checkActive(currentChat) ? (\r\n                        <>\r\n                          <div className='activeBadge'></div>\r\n                          <div className='hUsername'>{friend?.username}</div>\r\n                          <div className='active'>Active now</div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className='hUsername'>{friend?.username}</div>\r\n                          <div className='active'>Away</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                    <div className='hIcon'>\r\n                      <CallIcon />\r\n                      <VideocamIcon />\r\n                      <InfoIcon />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='chatBoxTop'>\r\n                  {messages?.map((message) => (\r\n                    <div ref={scroll} key={message._id}>\r\n                      <Message\r\n                        friendImg={friendImg}\r\n                        userImg={user.profilePicture}\r\n                        message={message}\r\n                        own={message.sender === user._id}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className='chatBoxBottom'>\r\n                  <textarea\r\n                    className='chatMessageInput'\r\n                    placeholder='Write a message...'\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className='chatSubmitButton' onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>{' '}\r\n              </>\r\n            ) : (\r\n              <span className='noConversationText'>\r\n                Open a conversation to start a chat\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='chatOnline'\r\n          style={{ display: single ? 'none' : 'block' }}\r\n        >\r\n          <div className='chatOnlineWrapper'>\r\n            <ChatOnline\r\n              onlineUsers={onlineUsers}\r\n              currentId={user._id}\r\n              setCurrentChat={setCurrentChat}\r\n              user={user}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}