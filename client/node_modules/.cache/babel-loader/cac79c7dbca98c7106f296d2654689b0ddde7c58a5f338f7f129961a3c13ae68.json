{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKAKI\\\\SocialMedia\\\\client\\\\src\\\\components\\\\conversations\\\\Conversation.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './conversation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversation(_ref) {\n  _s();\n  let {\n    conversation,\n    currentUser,\n    onlineUsers\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const friend = conversation.members.find(member => member !== currentUser._id);\n  useEffect(() => {\n    const friendId = conversation.members.find(member => member !== currentUser._id);\n    const getUser = async () => {\n      try {\n        const res = await axios.get('/users?userId=' + friendId);\n        setUser(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUser();\n  }, [currentUser, conversation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user !== null && user !== void 0 && user.profilePicture ? PF + user.profilePicture : PF + 'person/noAvatar.png',\n        className: \"conversationImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), onlineUsers.some(u => u.userId === friend) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineBadge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"conversationName\",\n      children: user === null || user === void 0 ? void 0 : user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Conversation, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["axios","useEffect","useState","Conversation","conversation","currentUser","onlineUsers","user","setUser","PF","process","env","REACT_APP_PUBLIC_FOLDER","friend","members","find","member","_id","friendId","getUser","res","get","data","error","console","log","profilePicture","some","u","userId","username"],"sources":["C:/Users/AKAKI/SocialMedia/client/src/components/conversations/Conversation.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './conversation.css';\r\n\r\nfunction Conversation({ conversation, currentUser, onlineUsers }) {\r\n  const [user, setUser] = useState(null);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const friend = conversation.members.find(\r\n    (member) => member !== currentUser._id\r\n  );\r\n\r\n  useEffect(() => {\r\n    const friendId = conversation.members.find(\r\n      (member) => member !== currentUser._id\r\n    );\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get('/users?userId=' + friendId);\r\n        setUser(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n  return (\r\n    <div className='conversation'>\r\n      <div className='imageContainer'>\r\n        <img\r\n          src={\r\n            user?.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + 'person/noAvatar.png'\r\n          }\r\n          className='conversationImg'\r\n        />\r\n        {onlineUsers.some((u) => u.userId === friend) ? (\r\n          <div className='chatOnlineBadge'></div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <span className='conversationName'>{user?.username}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Conversation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,oBAAoB;AAAC;AAE5B,SAASC,YAAY,OAA6C;EAAA;EAAA,IAA5C;IAAEC,YAAY;IAAEC,WAAW;IAAEC;EAAY,CAAC;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAE9C,MAAMC,MAAM,GAAGT,YAAY,CAACU,OAAO,CAACC,IAAI,CACrCC,MAAM,IAAKA,MAAM,KAAKX,WAAW,CAACY,GAAG,CACvC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAGd,YAAY,CAACU,OAAO,CAACC,IAAI,CACvCC,MAAM,IAAKA,MAAM,KAAKX,WAAW,CAACY,GAAG,CACvC;IACD,MAAME,OAAO,GAAG,YAAY;MAC1B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,gBAAgB,GAAGH,QAAQ,CAAC;QACxDV,OAAO,CAACY,GAAG,CAACE,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IACDJ,OAAO,EAAE;EACX,CAAC,EAAE,CAACd,WAAW,EAAED,YAAY,CAAC,CAAC;EAC/B,oBACE;IAAK,SAAS,EAAC,cAAc;IAAA,wBAC3B;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QACE,GAAG,EACDG,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEmB,cAAc,GAChBjB,EAAE,GAAGF,IAAI,CAACmB,cAAc,GACxBjB,EAAE,GAAG,qBACV;QACD,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,EACDH,WAAW,CAACqB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAKhB,MAAM,CAAC,gBAC3C;QAAK,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAO,GAEvC,EACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAM,SAAS,EAAC,kBAAkB;MAAA,UAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEV;AAAC,GA1CQ3B,YAAY;AAAA,KAAZA,YAAY;AA4CrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}