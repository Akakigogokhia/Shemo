{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKAKI\\\\SocialMedia\\\\client\\\\src\\\\components\\\\profileForm\\\\ProfileForm.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport './profileForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileForm(_ref) {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [password, setPassword] = useState(null);\n  const [profilePic, setProfilePic] = useState('');\n  const [coverPic, setCoverPic] = useState('');\n  const updateCover = async e => {\n    e.preventDefault();\n    const newUser = {\n      userId: user._id,\n      password: password,\n      coverPicture: '',\n      profilePicture: ''\n    };\n    const cover = new FormData();\n    const coverName = Date.now() + coverPic.name;\n    cover.append('name', coverName);\n    cover.append('file', coverPic);\n    try {\n      await axios.post('/upload', cover);\n    } catch (err) {\n      console.log(err);\n    }\n    newUser.coverPicture = coverName;\n    try {\n      await axios.put('/users/' + user._id, newUser);\n      window.location.reload();\n    } catch (err) {}\n  };\n  const submitHandler = e => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => submitHandler(e),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadInput\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Change profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"upload\",\n          accept: \".png, .jpeg, .jpg, .gif\",\n          onChange: e => {\n            setProfilePic(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadInput\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Change cover picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"upload\",\n          accept: \".png, .jpeg, .jpg, .gif\",\n          onChange: e => {\n            setCoverPic(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadInput\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Change information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"passwordLabel\",\n        children: \"Enter password to save changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setPassword(e.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submitButton\",\n      children: \"Save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfileForm, \"aPL2h7xtwNVdLnLU3+bPM/qTAuo=\");\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["axios","useState","ProfileForm","user","password","setPassword","profilePic","setProfilePic","coverPic","setCoverPic","updateCover","e","preventDefault","newUser","userId","_id","coverPicture","profilePicture","cover","FormData","coverName","Date","now","name","append","post","err","console","log","put","window","location","reload","submitHandler","target","files","value"],"sources":["C:/Users/AKAKI/SocialMedia/client/src/components/profileForm/ProfileForm.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport './profileForm.css';\r\n\r\nfunction ProfileForm({ user }) {\r\n  const [password, setPassword] = useState(null);\r\n  const [profilePic, setProfilePic] = useState('');\r\n  const [coverPic, setCoverPic] = useState('');\r\n\r\n  const updateCover = async (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      userId: user._id,\r\n      password: password,\r\n      coverPicture: '',\r\n      profilePicture: '',\r\n    };\r\n\r\n    const cover = new FormData();\r\n    const coverName = Date.now() + coverPic.name;\r\n    cover.append('name', coverName);\r\n    cover.append('file', coverPic);\r\n\r\n    try {\r\n      await axios.post('/upload', cover);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    newUser.coverPicture = coverName;\r\n    try {\r\n      await axios.put('/users/' + user._id, newUser);\r\n      window.location.reload();\r\n    } catch (err) {}\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => submitHandler(e)}>\r\n      <div className='uploadInput'>\r\n        <label>\r\n          <span>Change profile picture</span>\r\n          <input\r\n            type='file'\r\n            className='upload'\r\n            accept='.png, .jpeg, .jpg, .gif'\r\n            onChange={(e) => {\r\n              setProfilePic(e.target.files[0]);\r\n            }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className='uploadInput'>\r\n        <label>\r\n          <span>Change cover picture</span>\r\n          <input\r\n            type='file'\r\n            className='upload'\r\n            accept='.png, .jpeg, .jpg, .gif'\r\n            onChange={(e) => {\r\n              setCoverPic(e.target.files[0]);\r\n            }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className='uploadInput'>\r\n        <label>Change information</label>\r\n      </div>\r\n      <div className='uploadInput'>\r\n        <label id='passwordLabel'>Enter password to save changes</label>\r\n        <input\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type='password'\r\n        ></input>\r\n      </div>\r\n      <button type='submit' className='submitButton'>\r\n        Save changes\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}