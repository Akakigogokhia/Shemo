{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKAKI\\\\SocialMedia\\\\client\\\\src\\\\components\\\\chatOnline\\\\ChatOnline.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './chatOnline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatOnline(_ref) {\n  _s();\n  let {\n    onlineUsers,\n    currentId,\n    setCurrentChat\n  } = _ref;\n  const [friends, setFriends] = useState([]);\n  const [onlineFriends, setOnlineFriends] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  console.log(onlineUsers, friends);\n  useEffect(() => {\n    const getFriends = async () => {\n      const res = await axios.get('/users/friends/' + currentId);\n      setFriends(res.data);\n    };\n    getFriends();\n  }, [currentId]);\n  useEffect(() => {\n    setOnlineFriends(friends.filter(friend => {\n      onlineUsers.includes(friend._id);\n    }));\n  }, [friends, onlineUsers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatOnline\",\n    children: onlineFriends.map(friend => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatOnlineFriend\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineImgContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatOnlineImg\",\n          src: friend !== null && friend !== void 0 && friend.profilePicture ? PF + (friend === null || friend === void 0 ? void 0 : friend.profilePicture) : PF + 'person/noAvatar.png'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineBadge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineName\",\n        children: friend.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatOnline, \"LhrCBG2JdpC4LXNRz/CbesZ6zYg=\");\n_c = ChatOnline;\nexport default ChatOnline;\nvar _c;\n$RefreshReg$(_c, \"ChatOnline\");","map":{"version":3,"names":["axios","useEffect","useState","ChatOnline","onlineUsers","currentId","setCurrentChat","friends","setFriends","onlineFriends","setOnlineFriends","PF","process","env","REACT_APP_PUBLIC_FOLDER","console","log","getFriends","res","get","data","filter","friend","includes","_id","map","profilePicture","username"],"sources":["C:/Users/AKAKI/SocialMedia/client/src/components/chatOnline/ChatOnline.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport './chatOnline.css';\r\n\r\nfunction ChatOnline({ onlineUsers, currentId, setCurrentChat }) {\r\n  const [friends, setFriends] = useState([]);\r\n  const [onlineFriends, setOnlineFriends] = useState([]);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  console.log(onlineUsers, friends);\r\n\r\n  useEffect(() => {\r\n    const getFriends = async () => {\r\n      const res = await axios.get('/users/friends/' + currentId);\r\n      setFriends(res.data);\r\n    };\r\n    getFriends();\r\n  }, [currentId]);\r\n\r\n  useEffect(() => {\r\n    setOnlineFriends(\r\n      friends.filter((friend) => {\r\n        onlineUsers.includes(friend._id);\r\n      })\r\n    );\r\n  }, [friends, onlineUsers]);\r\n  return (\r\n    <div className='chatOnline'>\r\n      {onlineFriends.map((friend) => (\r\n        <div className='chatOnlineFriend'>\r\n          <div className='chatOnlineImgContainer'>\r\n            <img\r\n              className='chatOnlineImg'\r\n              src={\r\n                friend?.profilePicture\r\n                  ? PF + friend?.profilePicture\r\n                  : PF + 'person/noAvatar.png'\r\n              }\r\n            />\r\n            <div className='chatOnlineBadge'></div>\r\n          </div>\r\n          <div className='chatOnlineName'>{friend.username}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatOnline;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,kBAAkB;AAAC;AAE1B,SAASC,UAAU,OAA6C;EAAA;EAAA,IAA5C;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAe,CAAC;EAC5D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMS,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB;EAE9CC,OAAO,CAACC,GAAG,CAACZ,WAAW,EAAEG,OAAO,CAAC;EAEjCN,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,YAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,iBAAiB,GAAGd,SAAS,CAAC;MAC1DG,UAAU,CAACU,GAAG,CAACE,IAAI,CAAC;IACtB,CAAC;IACDH,UAAU,EAAE;EACd,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEfJ,SAAS,CAAC,MAAM;IACdS,gBAAgB,CACdH,OAAO,CAACc,MAAM,CAAEC,MAAM,IAAK;MACzBlB,WAAW,CAACmB,QAAQ,CAACD,MAAM,CAACE,GAAG,CAAC;IAClC,CAAC,CAAC,CACH;EACH,CAAC,EAAE,CAACjB,OAAO,EAAEH,WAAW,CAAC,CAAC;EAC1B,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,UACxBK,aAAa,CAACgB,GAAG,CAAEH,MAAM,iBACxB;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC/B;QAAK,SAAS,EAAC,wBAAwB;QAAA,wBACrC;UACE,SAAS,EAAC,eAAe;UACzB,GAAG,EACDA,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEI,cAAc,GAClBf,EAAE,IAAGW,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,cAAc,IAC3Bf,EAAE,GAAG;QACV;UAAA;UAAA;UAAA;QAAA,QACD,eACF;UAAK,SAAS,EAAC;QAAiB;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC,eACN;QAAK,SAAS,EAAC,gBAAgB;QAAA,UAAEW,MAAM,CAACK;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAE1D;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA1CQxB,UAAU;AAAA,KAAVA,UAAU;AA4CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}