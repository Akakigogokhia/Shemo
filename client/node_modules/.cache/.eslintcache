[{"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\index.js":"1","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\App.js":"2","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\login\\Login.jsx":"3","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\home\\Home.jsx":"4","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\register\\Register.jsx":"5","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\profile\\Profile.jsx":"6","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\feed\\Feed.jsx":"7","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\header\\Header.jsx":"8","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\sidebar\\SideBar.jsx":"9","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\rightbar\\Rightbar.jsx":"10","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\hooks\\useFetch.js":"11","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\dummyData.js":"12","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\post\\Post.jsx":"13","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\share\\Share.jsx":"14","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\online\\Online.jsx":"15","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\context\\AuthContext.js":"16","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\context\\AuthReducer.js":"17","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\apiCalls.js":"18","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\chat\\Chat.jsx":"19","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\conversations\\conversation.jsx":"20","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\conversations\\Conversation.jsx":"21","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\message\\Message.jsx":"22","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\chatOnline\\ChatOnline.jsx":"23","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\profileForm\\ProfileForm.jsx":"24","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\suggestedFriends\\SuggestedFriends.jsx":"25"},{"size":348,"mtime":1671530053256,"results":"26","hashOfConfig":"27"},{"size":1133,"mtime":1671461488831,"results":"28","hashOfConfig":"27"},{"size":2388,"mtime":1671358046929,"results":"29","hashOfConfig":"27"},{"size":484,"mtime":1670313706023,"results":"30","hashOfConfig":"27"},{"size":2615,"mtime":1671360201413,"results":"31","hashOfConfig":"27"},{"size":2788,"mtime":1671694535294,"results":"32","hashOfConfig":"27"},{"size":1037,"mtime":1670487492981,"results":"33","hashOfConfig":"27"},{"size":2936,"mtime":1671635686518,"results":"34","hashOfConfig":"27"},{"size":3565,"mtime":1671441361544,"results":"35","hashOfConfig":"27"},{"size":5157,"mtime":1671533807170,"results":"36","hashOfConfig":"27"},{"size":836,"mtime":1670324782604,"results":"37","hashOfConfig":"27"},{"size":2424,"mtime":1670322114735,"results":"38","hashOfConfig":"27"},{"size":3783,"mtime":1671023553665,"results":"39","hashOfConfig":"27"},{"size":3509,"mtime":1671636019129,"results":"40","hashOfConfig":"27"},{"size":723,"mtime":1671356571325,"results":"41","hashOfConfig":"27"},{"size":762,"mtime":1671628590288,"results":"42","hashOfConfig":"27"},{"size":1056,"mtime":1671701144379,"results":"43","hashOfConfig":"27"},{"size":357,"mtime":1670336230113,"results":"44","hashOfConfig":"27"},{"size":8473,"mtime":1671711441017,"results":"45","hashOfConfig":"27"},{"size":379,"mtime":1670492571784,"results":"46","hashOfConfig":"27"},{"size":1182,"mtime":1671711619869,"results":"47","hashOfConfig":"27"},{"size":862,"mtime":1671711068610,"results":"48","hashOfConfig":"27"},{"size":2910,"mtime":1671458257431,"results":"49","hashOfConfig":"27"},{"size":5836,"mtime":1671694440324,"results":"50","hashOfConfig":"27"},{"size":490,"mtime":1671438895030,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mqqcbl",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\index.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\App.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\login\\Login.jsx",["140","141"],[],"import { useContext, useRef } from 'react';\r\nimport './login.css';\r\nimport { loginCall } from '../../apiCalls';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const { user, loading, error, dispatch } = useContext(AuthContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    loginCall(\r\n      { email: email.current.value, password: password.current.value },\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      <div className='loginWrapper'>\r\n        <div className='loginLeft'>\r\n          <h3 className='loginLogo'>Shemo</h3>\r\n          <span className='loginDesc'>\r\n            Connect with friends, the world around you and have fun on Shemo.\r\n          </span>\r\n        </div>\r\n        <div className='loginRight'>\r\n          <form className='loginBox' onSubmit={handleSubmit}>\r\n            <input\r\n              placeholder='Email'\r\n              type='email'\r\n              required\r\n              className='loginInput'\r\n              ref={email}\r\n            />\r\n            <input\r\n              ref={password}\r\n              minLength={6}\r\n              placeholder='Password'\r\n              required\r\n              type='password'\r\n              className='loginInput'\r\n            />\r\n            <button className='loginButton' type='submit' disabled={loading}>\r\n              {loading ? (\r\n                <CircularProgress style={{ color: 'white', size: '20px' }} />\r\n              ) : (\r\n                'Log In'\r\n              )}\r\n            </button>\r\n            <span className='loginForgot'>Forgot Password?</span>\r\n            <Link\r\n              to='/register'\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              <button className='loginRegisterButton' type='button'>\r\n                {loading ? (\r\n                  <CircularProgress style={{ color: 'white', size: '20px' }} />\r\n                ) : (\r\n                  'Create new account'\r\n                )}\r\n              </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\home\\Home.jsx",[],[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\register\\Register.jsx",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\profile\\Profile.jsx",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\feed\\Feed.jsx",["142"],[],"import Post from '../post/Post';\r\nimport Share from '../share/Share';\r\nimport './feed.css';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nexport default function Feed({ username }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const res = username\r\n        ? await axios.get('/posts/profile/' + username)\r\n        : await axios.get(`posts/timeline/${user._id}`);\r\n      setPosts(\r\n        res.data.sort((p1, p2) => {\r\n          return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n        })\r\n      );\r\n    };\r\n    fetchPosts();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div className='feed'>\r\n      <div className='feedWrapper'>\r\n        {username ? username === user.username && <Share /> : <Share />}\r\n        {posts.map((p) => (\r\n          <Post key={p._id} post={p} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\header\\Header.jsx",["143","144"],[],"import PersonIcon from '@mui/icons-material/Person';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css';\r\nimport { useContext, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n\r\nexport default function Header() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const [settings, setSettings] = useState(false);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    window.location.assign('/login');\r\n  };\r\n  return (\r\n    <div className='hContainer'>\r\n      <div className='hLeft'>\r\n        <Link to='/' style={{ textDecoration: 'none' }}>\r\n          <span className='logo'>Shemo</span>\r\n        </Link>\r\n      </div>\r\n      <div className='hCenter'>\r\n        <div className='searchbar'>\r\n          <SearchIcon className='searchIcon' />\r\n          <input\r\n            placeholder='Search for friend, post or video'\r\n            className='searchInput'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='hRight'>\r\n        <div className='hLinks'>\r\n          <span className='hLink'>Homepage</span>\r\n          <span className='hLink'>Timeline</span>\r\n        </div>\r\n        <div className='hIcons'>\r\n          <div className='hIconItem'>\r\n            <PersonIcon />\r\n            <span className='hIconBadge'>1</span>\r\n          </div>\r\n          <div className='hIconItem'>\r\n            <Link to='/chat' className='link'>\r\n              <QuestionAnswerIcon />\r\n            </Link>\r\n            <span className='hIconBadge'>2</span>\r\n          </div>\r\n          <div className='hIconItem'>\r\n            <NotificationsIcon />\r\n            <span className='hIconBadge'>1</span>\r\n          </div>\r\n        </div>\r\n        <img\r\n          onClick={() => setSettings(!settings)}\r\n          src={\r\n            user.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + 'person/noAvatar.png'\r\n          }\r\n          alt=''\r\n          className='hImg'\r\n        />\r\n        {settings && (\r\n          <div className='hSettings'>\r\n            <Link\r\n              to={`/profile/${user.username}`}\r\n              style={{\r\n                textDecoration: 'none',\r\n                color: 'white',\r\n              }}\r\n            >\r\n              <div className='viewProfile'>\r\n                View Profile <AccountCircleIcon />\r\n              </div>\r\n            </Link>\r\n\r\n            <div onClick={logout}>\r\n              <label>Log out</label>\r\n              <LogoutIcon />{' '}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\sidebar\\SideBar.jsx",["145"],[],"import './sidebar.css';\r\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport PlayCircleFilledWhiteIcon from '@mui/icons-material/PlayCircleFilledWhite';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';\r\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport SuggestedFriends from '../suggestedFriends/SuggestedFriends';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Sidebar() {\r\n  const [suggestedFriends, setSuggestedFriends] = useState([]);\r\n  const { data: users } = useFetch('/users/all');\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    setSuggestedFriends(\r\n      users.filter(\r\n        (u) => !user.followings.includes(u._id) && user._id !== u._id\r\n      )\r\n    );\r\n  }, [users]);\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      <div className='sidebarWrapper'>\r\n        <ul className='sidebarList'>\r\n          <li className='sidebarListItem'>\r\n            <RssFeedIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Feed</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <QuestionAnswerIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Chats</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <PlayCircleFilledWhiteIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Videos</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <GroupIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Groups</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <BookmarkIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Bookmarks</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <HelpOutlineOutlinedIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Questions</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <WorkOutlineOutlinedIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Jobs</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <EventIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Events</span>\r\n          </li>\r\n          <li className='sidebarListItem'>\r\n            <SchoolOutlinedIcon className='sidebarIcon' />\r\n            <span className='sidebarListItemText'>Courses</span>\r\n          </li>\r\n        </ul>\r\n        <button className='sidebarButton'>Show More</button>\r\n        <hr className='sidebarHr' />\r\n        <ul className='sidebarFriendList'>\r\n          {suggestedFriends?.map((u) => (\r\n            <Link\r\n              key={u._id}\r\n              to={`/profile/${u.username}`}\r\n              style={{ textDecoration: 'none', color: 'black' }}\r\n            >\r\n              <SuggestedFriends user={u} />\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\rightbar\\Rightbar.jsx",["146","147","148"],[],"import './rightbar.css';\r\nimport Online from '../online/Online';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport default function Rightbar({ user }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [friends, setFriends] = useState([]);\r\n  const { user: currentUser, dispatch } = useContext(AuthContext);\r\n  const [followed, setFollowed] = useState(false);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io('ws://localhost:4000');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit('addUser', currentUser?._id);\r\n    socket.current.on('getUsers', (users) => {\r\n      setOnlineUsers(users.filter((u) => u.userId !== currentUser?._id));\r\n    });\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    setFollowed(currentUser.followings.includes(user?._id));\r\n    const getFriends = async () => {\r\n      try {\r\n        const friendList = await axios.get('/users/friends/' + user?._id);\r\n        setFriends(friendList.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getFriends();\r\n  }, [user]);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      if (followed) {\r\n        axios.put(`/users/${user._id}/unfollow`, {\r\n          userId: currentUser._id,\r\n        });\r\n        dispatch({ type: 'UNFOLLOW', payload: user._id });\r\n      } else {\r\n        axios.put(`/users/${user._id}/follow`, {\r\n          userId: currentUser._id,\r\n        });\r\n        dispatch({ type: 'FOLLOW', payload: user._id });\r\n      }\r\n      setFollowed(!followed);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const HomeRightbar = () => {\r\n    return (\r\n      <>\r\n        <div className='birthdayContainer'>\r\n          <img className='birthdayImg' src='assets/gift.png' alt='' />\r\n          <span className='birthdayText'>\r\n            <b>Jane Doe</b> and <b>3 other friends</b> have a birhday today.\r\n          </span>\r\n        </div>\r\n        <a href='https://www.lamborghini.com/en-en' target='_blank'>\r\n          <img\r\n            className='rightbarAd'\r\n            src='https://cdnb.artstation.com/p/assets/images/images/005/047/357/large/allan-portilho-e89c6d32864153-56968c9449fea.jpg?1488129679'\r\n          />\r\n        </a>\r\n        <h4 className='rightbarTitle'>Online Friends</h4>\r\n        <ul className='rightbarFriendList'>\r\n          {onlineUsers?.map((u) => (\r\n            <Link\r\n              to='/chat'\r\n              key={u.userId}\r\n              style={{ textDecoration: 'none', color: 'black' }}\r\n            >\r\n              <Online userId={u.userId} />\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const ProfileRightbar = () => {\r\n    return (\r\n      <>\r\n        {user.username !== currentUser.username && (\r\n          <button className='rightbarFollowButton' onClick={handleClick}>\r\n            {followed ? 'Unfollow' : 'Follow'}\r\n            {!followed ? <AddIcon /> : <RemoveIcon />}\r\n          </button>\r\n        )}\r\n        <h4 className='rightbarTitle'>User information</h4>\r\n        <div className='rightbarInfo'>\r\n          <div className='rightbarInfoItem'>\r\n            <span className='rightbarInfoKey'>City:</span>\r\n            <span className='rightbarInfoValue'>{user.city}</span>\r\n          </div>\r\n          <div className='rightbarInfoItem'>\r\n            <span className='rightbarInfoKey'>From:</span>\r\n            <span className='rightbarInfoValue'>{user.from}</span>\r\n          </div>\r\n          <div className='rightbarInfoItem'>\r\n            <span className='rightbarInfoKey'>Relationship:</span>\r\n            <span className='rightbarInfoValue'>\r\n              {user.relationship ? user.relationship : '-'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <h4 className='rightbarTitle'>User friends</h4>\r\n        <div className='rightbarFollowings'>\r\n          {friends.map((friend) => (\r\n            <Link\r\n              to={'/profile/' + friend.username}\r\n              style={{ textDecoration: 'none' }}\r\n              key={friend._id}\r\n            >\r\n              <div className='rightbarFollowing'>\r\n                <img\r\n                  src={\r\n                    friend.profilePicture\r\n                      ? PF + friend.profilePicture\r\n                      : PF + 'person/noAvatar.png'\r\n                  }\r\n                  alt=''\r\n                  className='rightbarFollowingImg'\r\n                />\r\n                <span className='rightbarFollowingName'>{friend.username}</span>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className='rightbar'>\r\n      <div className='rightbarWrapper'>\r\n        {user ? <ProfileRightbar /> : <HomeRightbar />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\hooks\\useFetch.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\dummyData.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\post\\Post.jsx",["149","150"],[],"import './post.css';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Users } from '../../dummyData';\r\nimport { useEffect, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { format } from 'timeago.js';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\r\nimport ThumbUpOutlinedIcon from '@mui/icons-material/ThumbUpOutlined';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\n\r\nexport default function Post({ post }) {\r\n  const [desc, setDesc] = useState(post);\r\n  const [like, setLike] = useState(post.likes.length);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user: currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    setIsLiked(post.likes.includes(currentUser._id));\r\n  }, [currentUser._id, post.likes]);\r\n\r\n  const { data, loading, error } = useFetch(`/users?userId=${post.userId}`);\r\n\r\n  const likeHandler = () => {\r\n    try {\r\n      axios.put('/posts/' + post._id + '/like', { userId: currentUser._id });\r\n    } catch (err) {}\r\n    setLike(isLiked ? like - 1 : like + 1);\r\n    setIsLiked(!isLiked);\r\n  };\r\n\r\n  const deletePost = async () => {\r\n    try {\r\n      const res = await axios.delete('/posts/' + post._id, {\r\n        data: { userId: currentUser._id },\r\n      });\r\n      console.log(res);\r\n      setDesc(null);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className='post'>\r\n      {desc ? (\r\n        loading ? (\r\n          'please wait'\r\n        ) : (\r\n          <div className='postWrapper'>\r\n            <div className='postTop'>\r\n              <div className='postTopLeft'>\r\n                <Link to={`profile/${data.username}`}>\r\n                  <img\r\n                    className='postProfileImg'\r\n                    src={\r\n                      data.profilePicture\r\n                        ? PF + data.profilePicture\r\n                        : PF + 'person/noAvatar.png'\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </Link>\r\n                <span className='postUsername'>{data.username}</span>\r\n                <span className='postDate'>{format(desc.createdAt)}</span>\r\n              </div>\r\n              <div className='postTopRight'>\r\n                {desc.userId !== currentUser._id ? (\r\n                  <MoreVertIcon />\r\n                ) : (\r\n                  <DeleteSweepIcon\r\n                    onClick={deletePost}\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className='postCenter'>\r\n              <span className='postText'>{desc?.desc}</span>\r\n              <img className='postImg' src={PF + desc?.img} alt='' />\r\n            </div>\r\n            <div className='postBottom'>\r\n              <div className='postBottomLeft'>\r\n                {isLiked ? (\r\n                  <ThumbUpIcon className='likeIcon' onClick={likeHandler} />\r\n                ) : (\r\n                  <ThumbUpOutlinedIcon\r\n                    className='likeIcon'\r\n                    onClick={likeHandler}\r\n                  />\r\n                )}\r\n\r\n                <span className='postLikeCounter'>{like} people like it</span>\r\n              </div>\r\n              <div className='postBottomRight'>\r\n                <span className='postCommentText'>\r\n                  {desc?.comment} comments\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div>This post has been deleted...</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\share\\Share.jsx",["151","152","153"],[],"import './share.css';\r\nimport RoomIcon from '@mui/icons-material/Room';\r\nimport EmojiEmotionsOutlinedIcon from '@mui/icons-material/EmojiEmotionsOutlined';\r\nimport { useContext, useRef, useState } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from 'axios';\r\nimport CameraAltIcon from '@mui/icons-material/CameraAlt';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nexport default function Share() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const desc = useRef();\r\n  const [file, setFile] = useState(null);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const newPost = {\r\n      userId: user._id,\r\n      desc: desc.current.value,\r\n    };\r\n    if (file) {\r\n      const data = new FormData();\r\n      const fileName = Date.now() + file.name;\r\n      data.append('name', fileName);\r\n      data.append('file', file);\r\n      newPost.img = fileName;\r\n      try {\r\n        await axios.post('/upload', data);\r\n      } catch (err) {}\r\n    }\r\n    try {\r\n      await axios.post('/posts', newPost);\r\n      window.location.reload();\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <div className='share'>\r\n      <div className='shareWrapper'>\r\n        <div className='shareTop'>\r\n          <img\r\n            className='shareProfileImg'\r\n            src={\r\n              user.profilePicture\r\n                ? PF + user.profilePicture\r\n                : PF + 'person/noAvatar.png'\r\n            }\r\n            alt=''\r\n          />\r\n          <input\r\n            placeholder={`What's in your mind ${user.username.split(' ')[0]}?`}\r\n            className='shareInput'\r\n            ref={desc}\r\n          />\r\n        </div>\r\n        <hr className='shareHr' />\r\n        {file && (\r\n          <div className='shareImgContainer'>\r\n            <img src={URL.createObjectURL(file)} className='shareImg' />\r\n            <CancelIcon\r\n              className='shareCancelImg'\r\n              onClick={() => setFile(null)}\r\n            />\r\n          </div>\r\n        )}\r\n        <form className='shareBottom' onSubmit={submitHandler}>\r\n          <div className='shareOptions'>\r\n            <label htmlFor='file' className='shareOption'>\r\n              <CameraAltIcon className='shareIcon' />\r\n              <span className='shareOptionText'>Photo/Video</span>\r\n              <input\r\n                style={{ display: 'none' }}\r\n                type='file'\r\n                id='file'\r\n                accept='.png, .jpeg, .jpg, .gif'\r\n                onChange={(e) => {\r\n                  setFile(e.target.files[0]);\r\n                }}\r\n                onClick={(e) => {\r\n                  e.target.value = '';\r\n                }}\r\n              />\r\n            </label>\r\n            <div className='shareOption'>\r\n              <RoomIcon htmlColor='brown' className='shareIcon' />\r\n              <span className='shareOptionText'>Location</span>\r\n            </div>\r\n            <div className='shareOption'>\r\n              <EmojiEmotionsOutlinedIcon\r\n                htmlColor='goldenrod'\r\n                className='shareIcon'\r\n              />\r\n              <span className='shareOptionText'>Feeling/Activity</span>\r\n            </div>\r\n          </div>\r\n          <button type='submit' className='shareButton'>\r\n            Post {<SendIcon style={{ width: '15px' }} />}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\online\\Online.jsx",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\context\\AuthContext.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\context\\AuthReducer.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\apiCalls.js",[],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\pages\\chat\\Chat.jsx",["154","155"],[],"import React, { useContext, useState } from 'react';\r\nimport Header from '../../components/header/Header';\r\nimport Conversation from '../../components/conversations/Conversation';\r\nimport './chat.css';\r\nimport Message from '../../components/message/Message';\r\nimport ChatOnline from '../../components/chatOnline/ChatOnline';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport KeyboardBackspaceIcon from '@mui/icons-material/KeyboardBackspace';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Chat() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [single, setSingle] = useState(false);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [friendImg, setFriendImg] = useState(null);\r\n  const [friend, setFriend] = useState(null);\r\n  const { user } = useContext(AuthContext);\r\n  const socket = useRef();\r\n  const scroll = useRef();\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const configureChat = (conv) => {\r\n    setCurrentChat(conv);\r\n    setSingle(true);\r\n  };\r\n\r\n  window.addEventListener('resize', () => {\r\n    setWidth(window.innerWidth);\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const checkActive = (conv) => {\r\n    const friendId = conv.members.find((member) => member !== user._id);\r\n    return onlineUsers?.some((u) => u.userId === friendId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.current = io('ws://localhost:4000', { reconnection: false });\r\n    socket.current.on('getMessage', (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const friendId = currentChat?.members.find((member) => member !== user._id);\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get('/users?userId=' + friendId);\r\n        setFriend(res.data);\r\n        setFriendImg(res.data.profilePicture);\r\n      } catch (error) {}\r\n    };\r\n    getUser();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    socket.current.emit('addUser', user?._id);\r\n    socket.current.on('getUsers', (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get('/conversations/' + user?._id);\r\n        setConversations(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axios.get('/messages/' + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (newMessage.length > 0) {\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n\r\n      const receiverId = currentChat.members.find(\r\n        (member) => member !== user._id\r\n      );\r\n\r\n      socket.current.emit('sendMessage', {\r\n        senderId: user._id,\r\n        receiverId,\r\n        text: newMessage,\r\n      });\r\n\r\n      try {\r\n        const res = await axios.post('/messages', message);\r\n        setMessages([...messages, res.data]);\r\n        setNewMessage('');\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scroll.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='chat'>\r\n        <div\r\n          className='chatMenu'\r\n          style={{ display: width < 768 && single ? 'none' : 'block' }}\r\n        >\r\n          <div className='chatMenuWrapper'>\r\n            <input placeholder='Search for friends' className='chatMenuInput' />\r\n            {conversations?.map((conv) => (\r\n              <div key={conv._id} onClick={() => configureChat(conv)}>\r\n                <Conversation\r\n                  conversation={conv}\r\n                  currentUser={user}\r\n                  active={checkActive(conv)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='chatBox'\r\n          style={{ display: width < 768 && !single ? 'none' : 'block' }}\r\n        >\r\n          <div className='chatBoxWrapper'>\r\n            {currentChat ? (\r\n              <>\r\n                <div className='chatBoxHeader'>\r\n                  {width < 768 && single && (\r\n                    <KeyboardBackspaceIcon onClick={() => setSingle(false)} />\r\n                  )}\r\n                  <div className='cImgContainer'>\r\n                    <Link to={`/profile/${friend?.username}`}>\r\n                      <img\r\n                        className='cHeaderImg'\r\n                        src={\r\n                          friendImg\r\n                            ? PF + friendImg\r\n                            : PF + 'person/noAvatar.png'\r\n                        }\r\n                      />\r\n                    </Link>\r\n                    <div className='iHeader'>\r\n                      {checkActive(currentChat) ? (\r\n                        <>\r\n                          <div className='activeBadge'></div>\r\n                          <div className='hUsername'>{friend?.username}</div>\r\n                          <div className='active'>Active now</div>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className='hUsername'>{friend?.username}</div>\r\n                          <div className='active'>Away</div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                    <div className='hIcon'>\r\n                      <CallIcon />\r\n                      <VideocamIcon />\r\n                      <InfoIcon />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='chatBoxTop'>\r\n                  {messages?.map((message) => (\r\n                    <div ref={scroll} key={message._id}>\r\n                      <Message\r\n                        friendImg={friendImg}\r\n                        userImg={user.profilePicture}\r\n                        message={message}\r\n                        own={message.sender === user._id}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className='chatBoxBottom'>\r\n                  <textarea\r\n                    className='chatMessageInput'\r\n                    placeholder='Write a message...'\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className='chatSubmitButton' onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>{' '}\r\n              </>\r\n            ) : (\r\n              <span className='noConversationText'>\r\n                Open a conversation to start a chat\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className='chatOnline'\r\n          style={{ display: width < 768 && single ? 'none' : 'block' }}\r\n        >\r\n          <div className='chatOnlineWrapper'>\r\n            <ChatOnline\r\n              onlineUsers={onlineUsers}\r\n              currentId={user._id}\r\n              setCurrentChat={configureChat}\r\n              user={user}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\conversations\\conversation.jsx",["156"],[],"C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\conversations\\Conversation.jsx",["157"],[],"import axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './conversation.css';\r\n\r\nfunction Conversation({ conversation, currentUser, active }) {\r\n  const [user, setUser] = useState(null);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  useEffect(() => {\r\n    const friendId = conversation.members.find(\r\n      (member) => member !== currentUser._id\r\n    );\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get('/users?userId=' + friendId);\r\n        setUser(res.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n  return (\r\n    <div className='conversation'>\r\n      <div className='imageContainer'>\r\n        <img\r\n          src={\r\n            user?.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + 'person/noAvatar.png'\r\n          }\r\n          className='conversationImg'\r\n        />\r\n        {active ? <div className='chatOnlineBadge'></div> : ''}\r\n      </div>\r\n      <span className='conversationName'>{user?.username}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Conversation;\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\message\\Message.jsx",["158","159","160","161"],[],"import React, { useEffect, useState } from 'react';\r\nimport './message.css';\r\nimport { format } from 'timeago.js';\r\nimport axios from 'axios';\r\n\r\nfunction Message({ userImg, friendImg, message, own }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  return (\r\n    <div className={own ? 'message own' : 'message'}>\r\n      <div className='messageTop'>\r\n        <img\r\n          className='messageImg'\r\n          src={\r\n            own\r\n              ? userImg\r\n                ? PF + userImg\r\n                : PF + 'person/noAvatar.png'\r\n              : friendImg\r\n              ? PF + friendImg\r\n              : PF + 'person/noAvatar.png'\r\n          }\r\n        />\r\n        <p className='messageText'>{message.text}</p>\r\n      </div>\r\n      <div className='messageBottom'>{format(message.createdAt)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\chatOnline\\ChatOnline.jsx",["162","163","164"],[],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport './chatOnline.css';\r\n\r\nfunction ChatOnline({ onlineUsers, currentId, setCurrentChat, user }) {\r\n  const [friends, setFriends] = useState([]);\r\n  const [suggestedFriends, setSuggestedFriends] = useState([]);\r\n  const { data: users } = useFetch('/users/all');\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  useEffect(() => {\r\n    setSuggestedFriends(\r\n      users.filter(\r\n        (u) => !user.followings.includes(u._id) && user._id !== u._id\r\n      )\r\n    );\r\n  }, [users]);\r\n\r\n  const handleClick = async (friend) => {\r\n    let res;\r\n    try {\r\n      res = await axios.get(`/conversations/find/${currentId}/${friend._id}`);\r\n      if (!res.data) {\r\n        try {\r\n          res = await axios.post('/conversations', {\r\n            senderId: currentId,\r\n            receiverId: friend._id,\r\n          });\r\n        } catch (error) {}\r\n      }\r\n      setCurrentChat(res.data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getFriends = async () => {\r\n      const res = await axios.get('/users/friends/' + currentId);\r\n      setFriends(res.data);\r\n    };\r\n    getFriends();\r\n  }, [currentId]);\r\n\r\n  return (\r\n    <div className='chatOnline'>\r\n      <p className='friendType'>Friends</p>\r\n      {friends.map((friend) => (\r\n        <div\r\n          className='chatOnlineFriend'\r\n          onClick={() => handleClick(friend)}\r\n          key={friend._id}\r\n        >\r\n          <div className='chatOnlineImgContainer'>\r\n            <img\r\n              className='chatOnlineImg'\r\n              src={\r\n                friend?.profilePicture\r\n                  ? PF + friend?.profilePicture\r\n                  : PF + 'person/noAvatar.png'\r\n              }\r\n            />\r\n            {onlineUsers.some((u) => u.userId === friend._id) && (\r\n              <div className='chatOnlineBadge1'></div>\r\n            )}\r\n          </div>\r\n          <div className='chatOnlineName'>{friend.username}</div>\r\n        </div>\r\n      ))}\r\n      <p className='friendType'>Suggested Friends</p>\r\n      {suggestedFriends.map((friend) => (\r\n        <div\r\n          className='chatOnlineFriend'\r\n          onClick={() => handleClick(friend)}\r\n          key={friend._id}\r\n        >\r\n          <div className='chatOnlineImgContainer'>\r\n            <img\r\n              className='chatOnlineImg'\r\n              src={\r\n                friend?.profilePicture\r\n                  ? PF + friend?.profilePicture\r\n                  : PF + 'person/noAvatar.png'\r\n              }\r\n            />\r\n\r\n            {onlineUsers.some((u) => u.userId === friend._id) && (\r\n              <div className='chatOnlineBadge1'></div>\r\n            )}\r\n          </div>\r\n          <div className='chatOnlineName'>{friend.username}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatOnline;\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\profileForm\\ProfileForm.jsx",["165","166"],[],"import axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './profileForm.css';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nfunction ProfileForm({ user, currentUser }) {\r\n  const [password, setPassword] = useState(null);\r\n  const [pass, setPass] = useState(false);\r\n  const [profilePic, setProfilePic] = useState('');\r\n  const [coverPic, setCoverPic] = useState('');\r\n  const [update, setUpdate] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const [info, setInfo] = useState({\r\n    desc: '',\r\n    city: '',\r\n    from: '',\r\n    relationship: '',\r\n  });\r\n  const [newUser, setNewUser] = useState({\r\n    userId: user._id,\r\n    profilePicture: null,\r\n    coverPicture: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (user._id === currentUser._id)\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n  }, [user, currentUser]);\r\n\r\n  //Profile picture\r\n  const uploadProfile = async (updatedUser) => {\r\n    const data = new FormData();\r\n    const fileName = Date.now() + profilePic.name;\r\n    data.append('name', fileName);\r\n    data.append('file', profilePic);\r\n\r\n    setNewUser({\r\n      ...newUser,\r\n      profilePicture: fileName,\r\n    });\r\n\r\n    updatedUser.profilePicture = fileName;\r\n    try {\r\n      await axios.post('/upload', data);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Cover update\r\n  const uploadCover = async (updatedUser) => {\r\n    const data = new FormData();\r\n    const fileName = Date.now() + coverPic.name;\r\n    data.append('name', fileName);\r\n    data.append('file', coverPic);\r\n\r\n    updatedUser.coverPicture = fileName;\r\n    try {\r\n      await axios.post('/upload', data);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //Submit\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let updatedUser = { ...newUser };\r\n\r\n    updatedUser.userId = user._id;\r\n    if (profilePic) uploadProfile(updatedUser);\r\n    if (coverPic) uploadCover(updatedUser);\r\n\r\n    if (!updatedUser.profilePicture) {\r\n      updatedUser.profilePicture = user.profilePicture;\r\n    }\r\n    if (!updatedUser.coverPicture) {\r\n      updatedUser.coverPicture = user.coverPicture;\r\n    }\r\n    Object.keys(info).map((key) => {\r\n      if (info[key].length > 0) {\r\n        updatedUser[key] = info[key];\r\n      }\r\n    });\r\n\r\n    try {\r\n      await axios.put('/users/' + user._id, updatedUser);\r\n    } catch (error) {}\r\n\r\n    if (password) {\r\n      if (password.length > 5) {\r\n        updatedUser.password = password;\r\n        if (user._id === currentUser._id)\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n        window.location.reload();\r\n      } else {\r\n        setError('Password is too short');\r\n        return true;\r\n      }\r\n    } else {\r\n      if (user._id === currentUser._id)\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => submitHandler(e)}>\r\n      <div className='uploadInput'>\r\n        <label>\r\n          <span>\r\n            {!profilePic ? 'Change profile picture' : <CheckCircleIcon />}\r\n          </span>\r\n          <input\r\n            name='cover'\r\n            type='file'\r\n            className='upload'\r\n            accept='.png, .jpeg, .jpg, .gif'\r\n            onChange={(e) => {\r\n              setProfilePic(e.target.files[0]);\r\n            }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className='uploadInput'>\r\n        <label>\r\n          <span>\r\n            {!coverPic ? 'Change cover picture' : <CheckCircleIcon />}\r\n          </span>\r\n          <input\r\n            name='profile'\r\n            type='file'\r\n            className='upload'\r\n            accept='.png, .jpeg, .jpg, .gif'\r\n            onChange={(e) => {\r\n              setCoverPic(e.target.files[0]);\r\n            }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className='uploadInput'>\r\n        <label>\r\n          {!update ? (\r\n            <span onClick={() => setUpdate(true)}>Change information</span>\r\n          ) : (\r\n            <div>\r\n              <label>Description</label>\r\n              <input\r\n                onChange={(e) =>\r\n                  setInfo({\r\n                    ...info,\r\n                    desc: e.target.value,\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>City</label>\r\n              <input\r\n                onChange={(e) =>\r\n                  setInfo({\r\n                    ...info,\r\n                    city: e.target.value,\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>From</label>\r\n              <input\r\n                onChange={(e) =>\r\n                  setInfo({\r\n                    ...info,\r\n                    from: e.target.value,\r\n                  })\r\n                }\r\n              ></input>\r\n              <label>Relationship</label>\r\n              <input\r\n                onChange={(e) =>\r\n                  setInfo({\r\n                    ...info,\r\n                    relationship: e.target.value,\r\n                  })\r\n                }\r\n              ></input>\r\n            </div>\r\n          )}\r\n        </label>\r\n      </div>\r\n      <div className='uploadInput'>\r\n        {!pass ? (\r\n          <label onClick={() => setPass(true)}>Change password</label>\r\n        ) : (\r\n          <>\r\n            <label>Password</label>\r\n            <input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              type='password'\r\n            ></input>\r\n            <small>{error}</small>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        disabled={newUser.password?.length <= 4}\r\n        type='submit'\r\n        className='submitButton'\r\n      >\r\n        Save changes\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n","C:\\Users\\AKAKI\\SocialMedia\\client\\src\\components\\suggestedFriends\\SuggestedFriends.jsx",[],[],{"ruleId":"167","severity":1,"message":"168","line":11,"column":11,"nodeType":"169","messageId":"170","endLine":11,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":11,"column":26,"nodeType":"169","messageId":"170","endLine":11,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":24,"column":6,"nodeType":"174","endLine":24,"endColumn":16,"suggestions":"175"},{"ruleId":"167","severity":1,"message":"176","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":20},{"ruleId":"167","severity":1,"message":"177","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":21},{"ruleId":"172","severity":1,"message":"178","line":28,"column":6,"nodeType":"174","endLine":28,"endColumn":13,"suggestions":"179"},{"ruleId":"172","severity":1,"message":"180","line":47,"column":6,"nodeType":"174","endLine":47,"endColumn":12,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":75,"column":9,"nodeType":"184","messageId":"185","endLine":75,"endColumn":69,"fix":"186"},{"ruleId":"187","severity":1,"message":"188","line":76,"column":11,"nodeType":"184","endLine":79,"endColumn":13},{"ruleId":"167","severity":1,"message":"189","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":26,"column":26,"nodeType":"169","messageId":"170","endLine":26,"endColumn":31},{"ruleId":"167","severity":1,"message":"176","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":20},{"ruleId":"167","severity":1,"message":"177","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":60,"column":13,"nodeType":"184","endLine":60,"endColumn":73},{"ruleId":"172","severity":1,"message":"173","line":75,"column":6,"nodeType":"174","endLine":75,"endColumn":19,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"188","line":180,"column":23,"nodeType":"184","endLine":187,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":6,"column":7,"nodeType":"184","endLine":9,"endColumn":9},{"ruleId":"187","severity":1,"message":"188","line":27,"column":9,"nodeType":"184","endLine":34,"endColumn":11},{"ruleId":"167","severity":1,"message":"191","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"192","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"193","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":12,"column":9,"nodeType":"184","endLine":23,"endColumn":11},{"ruleId":"172","severity":1,"message":"194","line":18,"column":6,"nodeType":"174","endLine":18,"endColumn":13,"suggestions":"195"},{"ruleId":"187","severity":1,"message":"188","line":54,"column":13,"nodeType":"184","endLine":61,"endColumn":15},{"ruleId":"187","severity":1,"message":"188","line":77,"column":13,"nodeType":"184","endLine":84,"endColumn":15},{"ruleId":"167","severity":1,"message":"196","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":80,"column":33,"nodeType":"199","messageId":"200","endLine":80,"endColumn":35},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'useContext' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.followings'. Either include them or remove the dependency array.",["202"],"React Hook useEffect has a missing dependency: 'currentUser.followings'. Either include it or remove the dependency array.",["203"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"204","text":"205"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Users' is defined but never used.",["206"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.followings'. Either include them or remove the dependency array. If 'setSuggestedFriends' needs the current value of 'user.followings', you can also switch to useReducer instead of useState and read 'user.followings' in the reducer.",["207"],"'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},[2388,2388]," rel=\"noreferrer\"",{"desc":"214","fix":"215"},{"desc":"210","fix":"216"},"Update the dependencies array to be: [user._id, username]",{"range":"217","text":"218"},"Update the dependencies array to be: [user._id, user.followings, users]",{"range":"219","text":"220"},"Update the dependencies array to be: [currentUser.followings, user]",{"range":"221","text":"222"},"Update the dependencies array to be: [currentChat, user._id]",{"range":"223","text":"224"},{"range":"225","text":"220"},[752,762],"[user._id, username]",[1264,1271],"[user._id, user.followings, users]",[1505,1511],"[currentUser.followings, user]",[2632,2645],"[currentChat, user._id]",[600,607]]